for k in range(10):
    for t in cfix, sfix:
        a = t.Array(10)

        print(len(a))

        for i,j in enumerate(a):
            a[i] = j + i

a = cfix.Array(1)
a[0] = 1234
b = cfix.Array(None, a.address)
test(b[0], 1234)

M = cfix.Matrix(2, 3)
@for_range(2)
def f(i):
    @for_range(3)
    def f(j):
        M[i][j] = cfix(10 * i + j)

test(M[0][0], 0)
test(M[0][1], 1)
test(M[0][2], 2)
test(M[1][0], 10)
test(M[1][1], 11)
test(M[1][2], 12)

print_ln('M[1][2] %s', M[1][2])

a = cfix.Array(100)
a.assign(range(100))
test(a[-1], 99)
test(a[:][99], 99)
test(a[50:][0], 50)
test(a[:50][49], 49)
test(a[::3][33], 99)
test(a[50::3][16], 98)
test(a[:50:3][16], 48)

b = cfix.Array(100)
b[:] = a
test(b[99], 99)
b.assign_all(0)
b[50:] = a[:50]
test(b[99], 49)
b.assign_all(0)
b[:50] = a[:50]
test(b[49], 49)
b.assign_all(0)
b[::3] = a[:34]
test(b[99], 33)
test(b[1], 0)


a = sfix.Array(1)
a[0] = 1234
b = sfix.Array(None, a.address)
test(b[0], 1234)

M = sfix.Matrix(2, 3)
@for_range(2)
def f(i):
    @for_range(3)
    def f(j):
        M[i][j] = sfix(10 * i + j)

test(M[0][0], 0)
test(M[0][1], 1)
test(M[0][2], 2)
test(M[1][0], 10)
test(M[1][1], 11)
test(M[1][2], 12)

print_ln('M[1][2] %s', M[1][2].reveal())

a = sfix.Array(100)
a.assign(sfix(i) for i in range(100))
test(a[-1], 99)
test(a[:][99], 99)
test(a[50:][0], 50)
test(a[:50][49], 49)
test(a[::3][33], 99)
test(a[50::3][16], 98)
test(a[:50:3][16], 48)

zero = 0
b = sfix.Array(100)
b[:] = a
test(b[99], 99)
b.assign_all(zero)
b[50:] = a[:50]
test(b[99], 49)
b.assign_all(zero)
b[:50] = a[:50]
test(b[49], 49)
b.assign_all(zero)
b[::3] = a[:34]
test(b[99], 33)
test(b[1], 0)
